<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:gmail="http://www.mulesoft.org/schema/mule/gmail"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc" xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/gmail http://www.mulesoft.org/schema/mule/gmail/current/mule-gmail.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="2e2b6865-e5ff-44f9-97ff-e39785765226" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<flow name="implementationFlow" doc:id="d9150769-3d8a-41fe-94cd-1c5c0acee0cb" >
		<email:listener-imap doc:name="On New Email - IMAP" doc:id="56ffd457-61cf-43a9-9452-8f78d425e3bb" config-ref="Email_IMAP">
			<reconnect />
			<scheduling-strategy >
				<fixed-frequency frequency="10" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</email:listener-imap>
		<foreach doc:name="For each attachment" doc:id="9e2d467c-0385-4163-b421-22c920d26654" 
       collection="#[entriesOf(payload.attachments mapObject ((value, key) -&gt; {(key) : value.^raw})) default []]">

        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
        <set-variable value="#[payload.key]" doc:name="attachmentName" doc:id="1cc8f26a-240a-4629-8106-7f94a18e5823" variableName="attachmentName" />
			<logger level="INFO" doc:name="Logger" doc:id="c2a97676-0ac1-498e-814e-41d1fdfc34e9" message="#[vars.attachmentName]"/>

        <ee:transform doc:name="pdf to JSON" doc:id="a2484f0a-cf05-4302-a68f-f1993c2dc116" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Binaries
var myPDF = readUrl(payload.value, "application/octet-stream")
output application/json
---
{
	Document: {
		Bytes:toBase64(myPDF as Binary)
	},
	FeatureTypes: [ "FORMS" , "TABLES" ]
}

]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<set-variable value="#[payload.Document.Bytes]" doc:name="Set Variable" doc:id="e27c0437-cb2f-4f65-b86f-b98d97cff652" variableName="file64"/>
			<http:request method="POST" doc:name="get data textract" doc:id="f4e03557-e3e3-44ce-accb-5a8e1ec0f2fe" config-ref="HTTP_Request_configuration" path="/api/ocr" />
			<logger level="INFO" doc:name="Logger" doc:id="ca44a74f-ef85-42bd-8d37-9301cdc07765" message="#[payload]"/>
			<http:request method="POST" doc:name="Request" doc:id="90eae5e0-b6ad-4706-bcf2-4f50544d260e" config-ref="HTTP_Request_configuration1" path="/api/orders/{OID}">
			<http:body ><![CDATA[#[payload ++ {file_64: vars.file64}]]]></http:body>
				<http:uri-params><![CDATA[#[{
	'OID' : payload.order_id
}]]]></http:uri-params>
			</http:request>
    

</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="c96050d3-86e1-4b7c-a2ee-bbea6d12c99c" message="#[payload]" />
	</flow>
</mule>
